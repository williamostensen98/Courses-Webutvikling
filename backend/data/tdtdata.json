	{"norwegian_name": "Objektorientert programmering","code":"TDT4100","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Grunnleggende algoritmer og datastrukturer, konstruksjoner og kontrollflyt i objektorienterte spr\u00e5k. Modularisering og gjenbruk. Standard programvarebibliotek. Enhetstesting, feilfinning og verkt\u00f8y for dette.  Objektorientert design. Bruk av klasse-, sekvens- og samhandlingsdiagrammer i UML. Bruk av design patterns. Java brukes som implementasjonsspr\u00e5k.","learning_goal":"Kunnskap:\r\nStudentene skal ha kunnskap om de viktigste begrepene og mekanismene i objektorienterte spr\u00e5k og om hvordan objektorienterte programmer struktureres og testes.\r\nFerdigheter:\r\nStudentene skal f\u00e5 ferdigheter i objektorientert programmering og bruk av relevante programmeringsmetoder (koding, testing og feilfinning) og moderne utviklingsverkt\u00f8y.\r\nKompetanse:\r\nStudentene skal kunne bruke objektorientert programmering for \u00e5 l\u00f8se praktiske problemer og utnytte mulighetene i moderne utviklingsverkt\u00f8y."}
	{"norwegian_name": "Prosedyre- og objektorientert programmering","code":"TDT4102","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Grunnleggende og praktisk orientert programmering med programmeringsspr\u00e5ket C++.\r\nEmnet dekker det viktigste i programmeringsspr\u00e5ket samt utvalgte deler av standardbiblioteket. Gjennom \u00f8vingene f\u00e5r studentene omfattende erfaring i konstruksjon, feilfinning og testing av programvare.","learning_goal":"Kunnskap: \r\n- Har bred og praktisk orientert kunnskap om programmeringsspr\u00e5ket C++. - Kan syntaks og regler for variabeldeklarasjoner og datatyper, typekonvertering, kontrollstrukturer, funksjoner og operatorer, overlagring, klasser, arv, templates, unntaksh\u00e5ndtering.\r\n- Har kunnskap om automatisk og dynamiske variabler og bruk av pekere. \r\n- Har kunnskap om rekursjon, enkle algoritmer og datastrukturer.\r\n- Har kunnskap om prosedural og objektorientert modularisering av koden og har kunnskap om hvordan kode kan organiseres i flere kildekodefiler, kompilering og lenking.\r\n- Har kunnskap om standarbiblioteket, inn\/ut datah\u00e5ndtering, vanlig brukte funksjoner og template-klasser.\r\n- Har kunnskap om moderne utviklingsverkt\u00f8y, teknikker for feilfinning og enkel testing av egen kode.\r\n- Har kunnskap om vanlige programmeringsfeil, validering av inndata, hvordan h\u00e5ndtere feil og uventet oppf\u00f8rsel.\r\n- Har kunnskap om diagramtyper for objektorienterte programmer.\r\n\r\nFerdigheter:\r\n- Kan utvikle et program fra problembeskrivelse til fungerende og feilfri l\u00f8sning.\r\n- Kjenner vanlige brukte kodingsteknikker og kan jobbe iterativt og effektivt med konstruksjon av egen kode. \r\n- Kan programmere proseduralt hvor koden er fornuftig modularisert i funksjoner og objektorientert hvor koden er organisert i klasser. \r\n- Kan velge hvilke hvilken l\u00f8sning som er best for et gitt problem.\r\n- Kan skrive kode som er gjenbrukbar, lesbar og enkel \u00e5 vedlikeholde.\r\n- Kan lese kode og forst\u00e5 hvordan koden oppf\u00f8rer seg i kj\u00f8retid.\r\n\r\nGenerell kompetanse:\r\n- Kan jobbe effektivt med \u00e5 analysere et problem og konstruere en l\u00f8sning.\r\n- Kan kommunisere og diskutere kodel\u00f8sninger og forklare hvordan et program fungerer. Kjenne til forskjeller mellom programmeringsspr\u00e5k.\r\n- Kan finne frem til \u00e5 benytte n\u00f8dvendige hjelpemidler, kan bruke dokumentasjon for programmeringsspr\u00e5ket og standarbiblioteket.\r\n- V\u00e6re klar over aspekter ved programmering som kan p\u00e5virke informasjonssikkerhet."}
	{"norwegian_name": "Informasjonsteknologi, grunnkurs","code":"TDT4105","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Emnet best\u00e5r at to deler: IKT-teori (1\/3) og grunnleggende prosedyreorientert programmering i Matlab (2\/3).\r\n\r\nIKT-teori:\r\n- Grunnleggende om datamaskiners oppbygging og virkem\u00e5te.\r\n- Digital representasjon av informasjon.\r\n- Algoritmer.\r\n- Nettverk og kommunikasjon.\r\n- Systemutvikling (software engineering).\r\n\r\nProsedyreorientert programmering:\r\n- Variabler og datatyper.\r\n- Input og output.\r\n- Kontrollstrukturer: Sekvens, valg, og repetisjon.\r\n- Strukturering og oppdeling av programmer; funksjoner som byggeklosser.\r\n- Datastrukturer: Vektorer (lister), tabeller, tekststrenger og poster (structures).\r\n- Filbehandling og persistent lagring av informasjon.\r\n- Rekursjon, sortering og s\u00f8king.\r\n- Formulering av algoritmer i pseudokode og flytskjema.\r\n- Matlab som programmeringsomgivelse.\r\n","learning_goal":"Kunnskaper: \r\n- Har grunnleggende kunnskap om f\u00f8lgende hovedelementer i informasjons- og kommunikasjonsteknologi (IKT): Datamaskiner, digital representasjon av informasjon, algoritmer, programvare, kommunikasjon og nettverk.\r\n- Har grunnleggende kunnskap om grunnelementene i prosedyreorientert programmering. \r\n- Har grunnleggende kunnskap om prosessen fra problem til fungerende program. \r\n\r\nFerdigheter: \r\n- Kan anvende grunnelementene i praktisk, prosedyreorientert programmering. \r\n- Kan bruke relevante programmeringsverkt\u00f8y.\r\n- Kan analysere et problem, finne algoritmer og datastrukturer som l\u00f8ser problemet, formulere en l\u00f8sning som pseudokode eller flytskjema, og programmere og teste en l\u00f8sning i Matlab. \r\n- Kan gjennomf\u00f8re mindre programmeringsprosjekter. \r\n- Kan gj\u00f8re enkle analyser av virkem\u00e5ten til IKT systemer. "}
	{"norwegian_name": "Informasjonsteknologi, grunnkurs","code":"TDT4110","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Emnet best\u00e5r at to deler: IKT-teori (1\/3) og grunnleggende prosedyreorientert programmering i Python (2\/3).\r\n\r\nIKT-teori:\r\n- Grunnleggende om datamaskiners oppbygging og virkem\u00e5te.\r\n- Digital representasjon av informasjon.\r\n- Algoritmer.\r\n- Nettverk og kommunikasjon.\r\n- Systemutvikling (software engineering).\r\n\r\nProsedyreorientert programmering:\r\n- Variabler og datatyper.\r\n- Input og output.\r\n- Kontrollstrukturer: Sekvens, valg, og repetisjon.\r\n- Strukturering og oppdeling av programmer; funksjoner og moduler.\r\n- Datastrukturer: Lister, tabeller, tekststrenger, mengder, tupler og poster (dictionary).   \r\n- Filbehandling, persistent lagring av informasjon, og unntak (exception).\r\n- Rekursjon, sortering og s\u00f8king.\r\n- Formulering av algoritmer i pseudokode og flytskjema.\r\n- Python som programmeringsomgivelse.\r\n","learning_goal":"Kunnskaper: \r\n- Har grunnleggende kunnskap om f\u00f8lgende hovedelementer i informasjons- og kommunikasjonsteknologi (IKT): Datamaskiner, digital representasjon av informasjon, algoritmer, programvare, kommunikasjon og nettverk.\r\n- Har grunnleggende kunnskap om grunnelementene i prosedyreorientert programmering. \r\n- Har grunnleggende kunnskap om prosessen fra problem til fungerende program. \r\n\r\nFerdigheter: \r\n- Kan anvende grunnelementene i praktisk, prosedyreorientert programmering. \r\n- Kan bruke relevante programmeringsverkt\u00f8y.\r\n- Kan analysere et problem, finne algoritmer og datastrukturer som l\u00f8ser problemet, formulere en l\u00f8sning som pseudokode eller flytskjema, og programmere og teste en l\u00f8sning i Python. \r\n- Kan gjennomf\u00f8re mindre programmeringsprosjekter. \r\n- Kan gj\u00f8re enkle analyser av virkem\u00e5ten til IKT-systemer. \r\n"}
	{"norwegian_name": "Programmeringslab for datateknologi","code":"TDT4112","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Emnet skal gi erfaring i programmering og innovasjon, planlegging, utvikling og utpr\u00f8ving av teknologiske l\u00f8sninger, samt evaluering av disse. Studentene skal jobbe med relevant teknologi og opparbeide mestring og erfaringer som er nyttige for det videre studiet i Datateknologi. ","learning_goal":"Grunnleggende kunnskap i programmering, planlegging av mindre prosjekt,  utpr\u00f8ving og uttesting av egne og andres l\u00f8sninger. \r\nFerdigheter i \u00e5 programmere interaktive l\u00f8sninger som kan inkludere sensorer, bilder, lyd og annet multimedia innhold.  Grunnleggende ferdigheter i \u00e5 teste ut, vurdere og gi konstruktive tilbakemeldinger til egne og andres l\u00f8sninger. \r\nGenerell kompetanse i \u00e5 forholde seg selvstendig og utpr\u00f8vende til programmering og datateknologi. \r\n"}
	{"norwegian_name": "Datateknologi, programmeringsprosjekt","code":"TDT4113","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Emnet skal gi erfaring i design og programmering av datasystemer som l\u00f8ser rimelig\r\nkomplekse problemer men krever rimelig lite teoretisk forst\u00e5else av avanserte \r\ndatavitenskapelig konsepter.  Fokus skal v\u00e6re p\u00e5 bunn-up utvikling og bruken av modularitet og abstraksjon for \u00e5 bygge stor datasystemer.  Studentene skal l\u00e6re relevant verkt\u00f8y for programutvikling og de skal h\u00f8ste nyttig erfaring for \r\nvidere studiet i Datateknologi.","learning_goal":"Grunnleggende kunnskap i programmering kombinert med planlegging og gjennomf\u00f8ring av et programmeringsprosjekt med noe kompleksitet. Ferdigheter i \u00e5 jobbe strukturert og modul\u00e6rt fra problem til fungerende l\u00f8sning. Generell kompetanse i prosjektarbeid og selvstendig arbeid i utvikling og  programmering."}
	{"norwegian_name": "Informasjonsgjenfinning","code":"TDT4117","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Emnet tar vare p\u00e5 den delen av informatikkfaget som omfatter automatisk lagring og gjenfinning av dokumenter. I denne sammenhengen inkluderer dokumentbegrepet ogs\u00e5 lyd og bilde. Emnet inneholder disipliner som filorganisering, queryoperasjoner, dokumentoperasjoner og kunnskapsbasert gjenfinning av tekstuelle og multimedia informasjon.","learning_goal":"Studentene skal l\u00e6re og forst\u00e5 prinsipper, teknikker og metoder bak informasjonsgjenfinning."}
	{"norwegian_name": "Algoritmer og datastrukturer","code":"TDT4120","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Metoder for \u00e5 analysere effektiviteten av algoritmer, splitt- og hersk-teknikker, rekursive l\u00f8sningsmetoder. Metoder for ordning, s\u00f8king i og sortering av datamengder. Datastrukturer for effektiv gjenfinning av data, dynamisk programmering og gr\u00e5dighetsalgoritmer. Datastrukturer for etablering av grafer og nettverk, samt metoder for gjennoml\u00f8ping og leting. Algoritmer for \u00e5 finne beste vei(er) og koplinger (matchinger), spenntr\u00e6r og maksimal flyt. Teori for problemkompleksitet. Algoritmene uttrykkes mest mulig spr\u00e5kuavhengig.","learning_goal":"Kunnskaper \u0096 kandidaten skal ha kunnskap om:\r\n- Et bredt spekter av etablerte algoritmer og datastrukturer med nytteverdi p\u00e5 tvers av mange fagomr\u00e5der.\r\n- Klassiske algoritmiske problemer med kjente effektive l\u00f8sninger.\r\n- Komplekse problemer uten kjente effektive l\u00f8sninger.\r\n\r\nFerdigheter \u0096 kandidaten skal kunne:\r\n- Analysere algoritmers effektivitet for \u00e5 oppn\u00e5 best mulig l\u00f8sning p\u00e5 et gitt problem.\r\n- Formulere et problem s\u00e5 det rasjonelt kan l\u00f8ses av en algoritme.\r\n- Bruke kjente designmetoder for \u00e5 konstruere nye effektive algoritmer.\r\n\r\nGenerell kompetanse \u0096 kandidaten skal v\u00e6re i stand til:\r\n- \u00c5 bruke kjente algoritmer og tilgjengelige programmoduler p\u00e5 nye problemstillinger.\r\n- Utvikle og realisere nye datatekniske l\u00f8sninger p\u00e5 komplekse problemstillinger med rot i en praktisk virkelighet."}
	{"norwegian_name": "Algoritmekonstruksjon","code":"TDT4125","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Avanserte algoritmiske teknikker, bl.a. for \u00e5 l\u00f8se og h\u00e5ndere spesielt vanskelige (for eksempel NP-komplette) problemer.","learning_goal":"Kunnskaper \u0096 kandidaten skal ha kunnskap om:\r\n- Videreg\u00e5ende metoder for algoritmekonstruksjon.\r\n\r\nFerdigheter \u0096 kandidaten skal kunne:\r\n- Konstruere effektive algoritmer for algoritmiske problemer.\r\n- Konstruere tiln\u00e6rmede l\u00f8sninger for komplekse problemer.\r\n- Konstruere heuristiske l\u00f8sninger for komplekse problemer.\r\n\r\nGenerell kompetanse \u0096 kandidaten skal v\u00e6re i stand til:\r\n- \u00c5 h\u00e5ndtere komplekse algoritmiske problemer, enten ved \u00e5 konstruere en eksakt eller approksimert algoritme, eller ved \u00e5 lage en heuristisk l\u00f8sning.\r\n- \u00c5 vise at et problem har h\u00f8y kompleksitet.\r\n- \u00c5 vurdere ulike algoritmiske l\u00f8sninger opp mot hverandre."}
	{"norwegian_name": "Programmering og numerikk","code":"TDT4127","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Emnet best\u00e5r at to deler: Grunnleggende prosedyreorientert programmering i Python (2\/3) og\r\nnumerikk (1\/3).\r\n\r\nProsedyreorientert programmering:\r\n- Variabler og datatyper.\r\n- Input og output.\r\n- Kontrollstrukturer: Sekvens, valg, og repetisjon.\r\n- Strukturering og oppdeling av programmer; funksjoner og moduler.\r\n- Datastrukturer: Lister, tabeller, tekststrenger, mengder, tupler og poster (dictionary).   \r\n- Filbehandling, persistent lagring av informasjon, og unntak (exception).\r\n- Rekursjon.\r\n- Python som programmeringsomgivelse.\r\n- Behandling av N-dimensjonale matriser\r\n- Plotting av funksjoner\r\n\r\nNumerikk:\r\n- Numerisk integrasjon av funksjoner: Trapes-metoden, Simpsons metode, Adaptiv Simpson metode\r\n- Newtons metode for \u00e5 finne funksjoners nullpunkt \r\n- Gauss-eliminasjon for \u00e5 l\u00f8se line\u00e6re ligningssett\r\n- Numerisk l\u00f8sning av ordin\u00e6re differensialligninger","learning_goal":"Kunnskaper: \r\n- Har grunnleggende kunnskap om grunnelementene i prosedyreorientert programmering. \r\n- Har grunnleggende kunnskap om prosessen fra problem til fungerende program. \r\n- Har grunnleggende kunnskap om innen numeriske metoder.\r\n\r\nFerdigheter: \r\n- Kan anvende grunnelementene i praktisk, prosedyreorientert programmering. \r\n- Kan bruke relevante programmeringsverkt\u00f8y.\r\n- Kan analysere et problem, finne prosess og datastrukturer som l\u00f8ser problemet, formulere en l\u00f8sning som pseudokode eller flytskjema, og programmere og teste en l\u00f8sning i Python. \r\n- Kan gjennomf\u00f8re mindre programmeringsprosjekter. \r\n- Kan utf\u00f8re numeriske beregninger i Python. "}
	{"norwegian_name": "Introduksjon til kunstig intelligens ","code":"TDT4136","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Emnet starter med \u00e5 beskrive metoder for probleml\u00f8sning ved hjelp av heuristisk s\u00f8k i tilstandsrom. Deretter beskrives forskjellige kunnskapspresentasjonsspr\u00e5k og slutningsmekanismer for maskinell\r\nprobleml\u00f8sning. Representasjon i form av predikatlogikk, regler, rammer og semantiske nett behandles, og knyttes til hovedformene for resonnering - s\u00e6rlig regelbasert resonnering. Emnet behandler videre arkitekturer som integrerer forskjellige resonneringsmetoder, agentbaserte arkitekturer, samt arkitekturer for interaktiv probleml\u00f8sning i et menneske-maskin samspill. Det gis anvendelseseksempler underveis for \u00e5 belyse metodene.","learning_goal":"Emnet skal gi en generell innf\u00f8ring i fagfeltet kunstig intelligens (AI) og dets grunnlag hentet fra matematikk, logikk og kognitive vitenskaper. Fagfeltet sikter mot \u00e5 realisere aspekter av intelligent adferd i datamaskinsystemer."}
	{"norwegian_name": "Kognitive arkitekturer","code":"TDT4137","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Kognitive arkitekturer bidrar til \u00f8kt integrert forst\u00e5else om oppbyggingen av intelligente systemer og hvordan disse interakterer med den eksterne verden.\r\nEmnet tar opp underliggende infrastrukturer og hvordan forskjellige subsystemer samspillerer for \u00e5 skape en koherent kognisjon.  Det fokuseres blant annet p\u00e5 korttids- og langtids-hukommelse, representasjon av mentale strukturer, funksjonelle prosesser, og l\u00e6ringsmekansimer.  I denne kontekst ser en ogs\u00e5 p\u00e5 evaluering av brukergrensesnitt som kognitiv kompleksitetsanalyse, og p\u00e5 avansert multimodal interaksjon.","learning_goal":"Kunnskaper: Emnet skal gi studenten en generell innf\u00f8ring i begrepsapparat, metoder og teknikker innen kognitive arkitekturer. \r\nFerdigheter: Studenten skal v\u00e6re i stand til \u00e5 benytte aktuelle metoder og teknikker.\r\nGenerell kompetanse: Studenten skal skal gjennom praktiske og teoretiske oppgaver forst\u00e5 og anvende kognitive arkitekturer og ha et helhetlig bilde av intelligente systemer. Kandidaten skal kjenne fagfeltets historikk og grunnlag hentet fra kunstig intelligens, kognitive vitenskaper og bla menneske-maskin interaksjon."}
	{"norwegian_name": "Programvareutvikling","code":"TDT4140","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Programvare-prosesser, Agile Software, prosjektledelse og planlegging, System-modellering og Unified Modeling Language, Architectural Design, Software Design, Software Testing, Software Evolution, Configuration Management, Software gjenbruk, Service Oriented Architecture, Sikkerhet, Software Quality og prosessforbedring.\r\n","learning_goal":"Kunnskap:\r\nStudentene vil f\u00e5 kunnskap om programvareutvikling-konsepter som prosessmodeller, metoder og teknikker for architecture design, testing, planlegging, konfigurasjonsstyring og kvalitetsstyring.\r\n\r\nFerdigheter:\r\nPlanlegge og administrere sm\u00e5 programvareutviklings-prosjekter og delta som designer \/ programmerer \/ tester i st\u00f8rre programvareprosjekter.\r\n\r\nGenerell kompetanse:\r\nStudentene skal kunne forst\u00e5 betydningen av programvareutvikling som et yrke. Studentene skal kunne forst\u00e5 og samtale om komplekse programvareutviklings-prosjekter og tilh\u00f8rende tekniske og organisatoriske problemstillinger."}
	{"norwegian_name": "Datamodellering og databasesystemer","code":"TDT4145","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Grunnleggende innf\u00f8ring i datamodellering, med vekt p\u00e5 ER-modeller. Relasjonsmodellen, relasjonsalgebra og SQL. Databasekonstruksjon. Normalisering som designteori for relasjonsdatabaser. Andre databasemodeller. Lagringsteknologier, filorganisering og aksess-strukturer. Queryutf\u00f8ring. Databaseh\u00e5ndteringssystemer. Transaksjonsbegreper, samtidig utf\u00f8relse og sikkerhet mot tap av data. Dataintegritet.","learning_goal":"Kunnskaper: \r\n1. Databasesystemer \u0096 generelle egenskaper og systemstruktur.\r\n2. Datamodellering med vekt p\u00e5 entity-relationship-modeller.\r\n3. Relasjonsdatabasemodellen for databasesystemer, databaseskjema og dataintegritet.\r\n4. Sp\u00f8rrespr\u00e5k: Relasjonsalgebra og SQL.\r\n5. Designteori for relasjonsdatabaser.\r\n6. Systemdesign og programmering mot databasesystemer.\r\n7. Datalagring, filorganisering og indeksstrukturer.\r\n8. Utf\u00f8ring av databasesp\u00f8rringer.\r\n9. Transaksjoner, samtidighet og robusthet mot feil.\r\n\r\nFerdigheter:\r\n1. Datamodellering med entity-relationship-modellen.\r\n2. Realisering av relasjonsdatabaser.\r\n3. Databaseorientert programmering: SQL, relasjonsalgebra og database-programmering i Java.\r\n4. Vurdering og forbedring av relasjonsdatabaseskjema med utgangspunkt i normaliseringsteori.\r\n5. Analyse og optimalisering av ytelsen til databasesystemer.\r\n\r\nGenerell kompetanse:\r\n1. Kjennskap til anvendelser av databasesystemer og forst\u00e5else for nytte og begrensninger ved slike systemer.\r\n2. Modellering av og analytisk tiln\u00e6rming til datatekniske problemer.\r\n"}
	{"norwegian_name": "Avanserte databasesystemer","code":"TDT4150","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Oppbygning av databasesystemer. Optimalisering av sp\u00f8rringer. Parallelle og distribuerte databasesystemer. NoSQL. Nye database-arkitekturer og sp\u00f8rre-operatorer.","learning_goal":"Kunnskaper: \r\nKandidaten skal ha kunnskap om: \r\n- Optimalisering av sp\u00f8rringer. \r\n- Parallelle og distribuerte databasesystemer. \r\n- Nye database-arkitekturer og sp\u00f8rre-operatorer.\r\n\r\nFerdigheter: \r\n- V\u00e6re i stand til \u00e5 utvikle nye metoder innen databaseteknikk basert p\u00e5 kjennskap til eksisterende teknikker.\r\n- Evne til \u00e5 kunne anvende tilegnet kunnskap til \u00e5 utvikle helhetlige l\u00f8sninger der databasesystem\/databaseteknikker inng\u00e5r."}
	{"norwegian_name": "Datamaskiner og digitalteknikk","code":"TDT4160","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Emnet vil inneholde terminologi, prinsipper og begrep for konstruksjon og virkem\u00e5te for ulike typer moderne datamaskiner og annet datateknisk utstyr. Grunnleggende\r\ndigitale sekvensielle kretser inkludert metoder for analyse og konstruksjon av tilstandsmaskiner. Videre hvordan datamaskiner (og andre digitale maskiner) er bygget\r\nopp av kombinatoriske og sekvensielle byggeblokker. Kort historisk oversikt over datateknikkens utvikling. Oppbygging (organisering), virkem\u00e5te og realisering av\r\ndatamaskiner og datamaskinsystemer. Datamaskinkonstruksjon p\u00e5 forskjellige niv\u00e5, instruksjonsformat, adresseringsmodi, prosessorarkitekturer og -typer. Grensesnitt\r\nmellom maskinvare og programvare, sammenkobling av komponenter, avbrudd, busser, lagerhierarki og hurtigbuffer (Eng. cache). Gjennomgang av sentrale datatekniske\r\nutstyrsenheter (periferi-enheter). Kort introduksjon til distribuerte systemer, innvevde (\"embedded\") systemer, parallelle datamaskiner, nye teknologier og nye\r\nanvendelser (applikasjoner).","learning_goal":"Kunnskaper: \r\n- Studenten skal kjenne til datamaskiners konstruksjon og virkem\u00e5te \r\n- Studenten skal forst\u00e5 prinsippene for konstruksjon og analyse av sekvensielle digitale kretser og tilstandsmaskiner \r\n- Studenten skal forst\u00e5 hvordan en enkel prosessor fungerer \r\n- Studenten skal forst\u00e5 grensesnittet mellom programvare og maskinvare \r\n- Studenten skal kjenne til sentrale periferienheter \r\n- Studenten skal forst\u00e5 hvordan abstraksjon og struktur benyttes for \u00e5 h\u00e5ndtere kompleksitet i datamaskinsystemer.\r\n\r\nFerdigheter: \r\n- Studenten skal kunne formulere enkle programmer i assemblykode \r\n- Studenten skal v\u00e6re i stand til \u00e5 anvende digitale kretselement til \u00e5 konstruere grunnleggende digitale sekvensielle kretser og tilstandsmaskiner \r\n- Studenten skal v\u00e6re i stand til \u00e5 lese skjemategninger og blokkdiagrammer \r\n- Studenten skal kunne relatere blokkdiagrammer og skjemategninger til hverandre p\u00e5 ulike abstraksjonsniv\u00e5. \r\n\r\nGenerell kompetanse: \r\n- Studenten skal forst\u00e5 den generelle virkem\u00e5ten til en datamaskin og kunne anvende denne kunnskapen i prosjekter p\u00e5 alle abstraksjonsniv\u00e5 \r\n- Studenten skal forst\u00e5 den underliggende digitale logikken som datamaskiner best\u00e5r av.\r\n"}
	{"norwegian_name": "Programmeringsspr\u00e5k","code":"TDT4165","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Introduksjon til spr\u00e5kparadigmer, semantikk og beregningsmodeller. \r\nSpr\u00e5kmodeller som st\u00f8tter deklarativ, funksjonell, logisk, lat, dataflytorientert, distribuert, paralell programmering. \r\nProgrammeringsspr\u00e5ks syntaks, analyse, oversetting, tolking og semantikk.\r\nSammenlikning av egenskaper i spr\u00e5k mht. trygghet, typing, analyserbarhet, kj\u00f8retidssystem, semantikk, anvendelsesomr\u00e5de og modularisering. ","learning_goal":"Emnet skal gi: (1) Forst\u00e5else for grunntrekkene i imperative, logiske, funksjonelle og objektorienterte programmeringsspr\u00e5k. (2) Praktisk kjennskap til teknikker for \u00e5 implementere spr\u00e5k og metoder for \u00e5 beskrive deres mening. (3) Evne til \u00e5 forst\u00e5 og sammenlikne eksisterende og kommende spr\u00e5k."}
	{"norwegian_name": "Metoder i kunstig intelligens","code":"TDT4171","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Emnet er en videref\u00f8ring av TDT4136 Introduksjon til kunstig intelligens. De tre hovedformene for resonnering (regelbasert, modellbasert, og casebasert) behandles, med hovedfokus p\u00e5 modellbasert resonnering. Resonnering med usikker og delvis manglende informasjon, gis spesiell fokus, samt grunnlaget for l\u00e6rende systemer (maskinl\u00e6ring). I tillegg til de symbolprosesserende metodene (spesielt Bayesianske nettverk og beslutningsgrafer) gis det ogs\u00e5 en innf\u00f8ring i metoder basert p\u00e5 nevrale nettverk.","learning_goal":"Kunnskaper: \r\nKandidaten skal ha kunnskap om: \r\n- Generelle prinsipper for kunstig intelligens (AI)\r\n- Effektiv representasjon av usikker kunnskap \r\n- Prinsipper for rasjonell beslutningstakning\r\n- L\u00e6rende\/adapterende systemer.\r\n\r\nFerdigheter: \r\n- Vurdere forskjellige rammeverk for kunstig intelligens i spesifikke brukssituasjoner\r\n- Lage systemer som realiseres aspekter av intelligent adferd i datamaskinsystemer.\r\n\r\nGenerell kompetanse:  \r\n- Kjenne fagfeltet AIs grunnlag hentet fra matematikk, logikk og kognitive vitenskaper.\r\n\r\n\r\n"}
	{"norwegian_name": "Maskinl\u00e6ring og case-basert resonnering","code":"TDT4173","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Emnet behandler prinsipper og metoder for hvordan datasystemer selv kan oppdatere sin kunnskap og probleml\u00f8sningsevne. Klassiske metoder for maskinell l\u00e6ring basert p\u00e5 observerte data, samt l\u00e6ring som ogs\u00e5 utnytter eksisterende kunnskap gjennomg\u00e5s og analyseres. Hovedvekten legges p\u00e5 symbolprosesserende metoder, der eksplisitte begreper og sammenhenger l\u00e6res. Andre metoder som omhandles er bl.a. statistiske generaliseringer, ensemble metoder, og dyp l\u00e6ring. Det legges vekt p\u00e5 de enkelte l\u00e6ringsmetoders sterke og svake sider, relatert til ulike m\u00e5l for l\u00e6ringen.\r\nI case-basert resonnering integreres l\u00e6ring og probleml\u00f8sning ved at konkrete problemer som l\u00f8ses tas vare p\u00e5 og gjenbrukes ved l\u00f8sning av nye problemer, jfr. CBR-syklusen. Numeriske og kognitive modeller for similaritetsvurdering gjennomg\u00e5s, og ulike systemarkitekturer diskuteres. Videre behandles metoder der b\u00e5de case-spesifikk og generell kunnskap integreres i l\u00e6rings- og probleml\u00f8sningsfasene.","learning_goal":"Emnet skal gi en innf\u00f8ring i prinsipper og metoder for hvordan datasystemer kan l\u00e6re av egen erfaring. Det legges vekt p\u00e5 en fundamental forst\u00e5else av maskinl\u00e6ring generelt, som en bakgrunn for ulike spesifikke metoder. I case-basert resonnering vektlegges forst\u00e5elsen av hvordan maskinl\u00e6ring og probleml\u00f8sning integreres."}
	{"norwegian_name": "Informasjonssystemer","code":"TDT4175","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Taksonomier for ulike typer informasjonssystemer, ERP-systemer: typisk funksjonalitet, metodikk ved valg og innf\u00f8ring. IS strategi, prosessforbedring. Arbeidsmetodikk ved utvikling av informasjonssystemer: analyse av organisasjoners behov, modellering av arbeidsprosesser (n\u00e5situasjon og \u00f8nsket situasjon), evaluering av kvalitet for modeller og systemer. ","learning_goal":"Kunnskaper:\r\nKandidaten skal ha kunnskap om:\r\n- Relasjon mellom foretningsstrategi, organisasjonsstrategi og IKT-strategi.\r\n- Taksonomier for ulike informasjonssystemer.\r\n- Metodikker for innf\u00f8ring av informasjonssystemer.\r\n- Metodikker for kravinhenting.\r\n- Etikk og bruk av informasjonssystemer.\r\n\r\nFerdigheter:\r\nKandidaten kan:\r\n- Innhente krav for informasjonsystemer\r\n- Modellere foretningsprosesser med bruk av BPMN.\r\n\r\nGenerell kompetanse:\r\nKandidaten kan: \r\n- bidra til konsulentsvirksomhet i forhold til innf\u00f8ring av informasjonssystemer i (store) organisasjoner."}
	{"norwegian_name": "Menneske\u0096maskin-interaksjon","code":"TDT4180","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Introduksjon til begreper, prinsipper og praksis for konstruksjon av brukervennlige menneske-maskin grensesnitt. Oppgaveanalyse, feltstudie-teknikker, scenariebygging, iterative designmetoder, brukbarhetstesting, mentale modeller, metaforbruk, gestaltprinsipper for visuell komposisjon, empiriske og formelle evalueringsmetoder, dialogteknikker, prototypingsteknikker. ISO standarder om brukskvalitet (spesielt ISO 9241-11 og ISO 9241-210). Konstruksjon av grafiske, vindusbaserte grensesnitt med objektorienterte rammeverk. Innf\u00f8ring i vindussystemer.","learning_goal":"Kunnskaper: \r\nEmnet skal gi studenten en innf\u00f8ring i begrepsapparat, metoder og teknikker for brukersentrert design av grafiske brukergrensesnitt. Det skal ogs\u00e5 gi kunnskap om objekt-orientert konstruksjon av slike.\r\n\r\nFerdigheter: \r\nStudenten skal v\u00e6re i stand til \u00e5 benytte aktuelle metoder og teknikker for brukersentrert design av grafiske brukergrensesnitt, samt objekt-orientert konstruksjon av slike.\r\n\r\nGenerell kompetanse:\r\nStudenten skal gjennom prosjektarbeidet i emnet ha skaffet seg erfaring med brukbarhetstesting og papirprototyping. "}
	{"norwegian_name": "Operativsystemer","code":"TDT4186","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Emnet vil etablere definisjoner, prinsipper, rammeverk og arkitekturer innen moderne operativsystemer. Emnet vil vektlegge prosesser, tr\u00e5dsystemer, synkronisering, CPU-tildeling, lagertildeling, filsystemer, inn\/utenheter, vrangl\u00e5sh\u00e5ndtering, multiprosessorsystemer og sikkerhet. Viktige eksempler vil v\u00e6re WINDOWS, UNIX, ANDROID & MAC OS.","learning_goal":"Kunnskaper:\r\nEmnet skal gi studentene en forst\u00e5else av hvilke oppgaver et operativsystem l\u00f8ser, hvordan oppgavene l\u00f8ses og gi en forst\u00e5else av bruksegenskapene ved et operativsystem. Temaene er operativsystemkjerne, prosesser, tr\u00e5der, synkronisering, tidsdeling, minneh\u00e5ndtering, filsystemer, I\/O, vrangl\u00e5sh\u00e5ndtering, multiprosessorsystemer og sikkerhet.\r\n\r\nFerdigheter:\r\nEmnet skal gj\u00f8re studentene i stand til \u00e5 kunne utnytte operativsystemet effektivt, som systemutvikler, som administrator og som sluttbruker. Studentene skal kunne programmere med tr\u00e5der og synkronisering.\r\n\r\nGenerell kompetanse:\r\nEmnet skal gi studentene en forst\u00e5else av utfordringer med og l\u00f8sninger for h\u00e5ndtering av ressurser som prosessorer og minne og gj\u00f8re studentene i stand til \u00e5 h\u00e5ndtere grensesnitt som programvare-maskinvare."}
	{"norwegian_name": "Grunnleggende visuell databehandling","code":"TDT4195","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Emnet best\u00e5r av en halvdel med bildesyntese (datagrafikk) og en halvdel med bildeanalyse (bildebehandling). Grafikk: grafiske primitiver, geometriske transformasjoner, betrakningstransformasjoner, elliminering av ikke synlige objekter og flater del I, fargerepresentasjon, belysningsmodeller og algoritmer del I. Lab med C\/C++ og OpenGL. Bildebehandling: eksempler p\u00e5 anvendelser av bildebehandling, line\u00e6r filtrering, histogramteknikker, Fouriertransformasjonen, restaurering, segmentering, klassifikasjon, introduksjon til 3D bildevolumer. Lab med C\/C++ eller MATLAB.","learning_goal":"Kunnskaper: Kandidaten vil tilegne seg kunnskaper om prinsipper og algoritmer i grunnleggende bildesyntese og bildeanalyse.\r\n\r\nFerdigheter: Kandidaten vil tilegne seg ferdigheter i grafikkprogrammering og programmering i bildebehandling med verkt\u00f8y som er i vanlig bruk.\r\n\r\nGenerell kompetanse: Kandidaten vil f\u00e5 kompetanse til \u00e5 realisere potensialet som ligger i teknikker for grunnleggende grafikk og bildebehandling. Kandidaten vil sitte igjen med en oversikt over feltet visuell databehandling og ha evnen til \u00e5 bygge betydelige anvendelser innen visuell databehandling og til \u00e5 utvide sine kunnskaper p\u00e5 feltet."}
	{"norwegian_name": "Parallelle beregninger","code":"TDT4200","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Optimering av algoritmer og program for b\u00e5de en- og flerprosessorsystemer. Valg av numeriske algoritmer, bruk av optimerte bibliotek, kompilatoroptimeringer og profilering av program. Hvordan utnytte PC-klynger og skjermkort for store beregningsoppgaver som ikke kan kj\u00f8res p\u00e5 bare en prosessor\/PC vil ogs\u00e5 bli gjennomg\u00e5tt. Parallellprogramerings\u00f8vinger inng\u00e5r i emnet.","learning_goal":"Forst\u00e5else av parallellprogrammering blir bare viktigere og viktigere ettersom nyere PCer og arbeidsstajoner tar i bruk multicore og multichip flerprosessor teknologi. \r\n\r\nKunnskap:\r\nM\u00e5let for dette emnet er derfor: \u00c5 gi studentene god forst\u00e5else for optimering av serielle algoritmer og program innen beregningsvitenskap (computational science).\r\n\r\nFerdigheter:\r\nUtvikle programeringsferdighetene til studentene p\u00e5 n\u00e5tidens og fremtidens flerprosessorsystemer."}
	{"norwegian_name": "Kompilatorteknikk","code":"TDT4205","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Kompilatorer er en n\u00f8dvendig forusetning for all moderne programvare.  Kompilatorteknikk er et av de omr\u00e5dene i informatikken som tidligst ble modent og fikk en sunn teoretisk og metodisk basis. Elementer av disse teknikkene benyttes ogs\u00e5 p\u00e5 de fleste andre omr\u00e5der der man gj\u00f8r inng\u00e5ende analyse av tekster p\u00e5 datamaskin.  Kurset tar opp grammatikker, leksikalsk og syntaktisk analyse, semantisk analyse, optimalisering, kodegenerering, tolkere og abstrakte maskiner, lenking og kj\u00f8retidssystemer.  Det legges vekt p\u00e5 konkret utforming av en kompilator som genererer kode for reelle datamaskiner. ","learning_goal":"Kunnskaper:\r\n\u00c5 gi en grundig innsikt i teknikker for konstruksjon av kompilatorer (spr\u00e5koversettere) og noe kunnskap om hvordan man utformer system-programvare i sin alminnelighet.\r\n\r\nFerdigheter:\r\nUtvikle grundig forst\u00e5else for hvordan moderne kompilatorer fungerer. I tillegg til mye programmering i C p\u00e5 \u00f8vingene er m\u00e5let at studentene ogs\u00e5 sitter igjen med \u00f8kte programmeringsferdigheter."}
	{"norwegian_name": "Helseinformatikk","code":"TDT4210","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"","learning_goal":""}
	{"norwegian_name": "Web-intelligens","code":"TDT4215","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Forvaltning av kunnskaper i web-baserte l\u00f8sninger.  Semantisk Web og ontologier. \u00c5pne, lenkede data for deling og samarbeid. Lingvistiske og statistiske teknikker for tekstmining og innholdsanalyse. Semantiske anbefalingssystemer. ","learning_goal":"Kunnskaper: Basisteknikker og semantiske spr\u00e5k for konstruksjon av ontologier og \u00e5pne data.  RDF(S) og OWL. SPARQL sp\u00f8rrespr\u00e5k.  POS\/NER-tagging, sentimentanalyse og andre teknikker i innholdsanalyse.  Innholdsbaserte anbefalingssystemer. \r\n\r\nFerdigheter:  Evne til \u00e5 bruke semantiske teknologier og \u00e5pne data til \u00e5 analysere ustrukturert innhold p\u00e5 web og lage semantiske anbefalingssystemer og andre intelligente l\u00f8sninger.  Evne til \u00e5 definere ontologier som kan utvides og gjenbrukes av andres applikasjoner.\r\n\r\nGenerell kompetanse: Studentene skal f\u00e5 innsikt i hvordan semantikk og \u00e5pne data brukes til \u00e5 ekstrahere, representere og tilgjengeliggj\u00f8re kunnskap p\u00e5 web, samt hvordan de kan brukes i intelligente applikasjoner."}
	{"norwegian_name": "Store, distribuerte datamengder","code":"TDT4225","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Introduksjon til store og distribuerte datamengder. Introduksjon til distribuerte teknikker, P2P, tid og koordinering. Moderne, effektive filsystemer med st\u00f8tte for konsistens. N\u00f8kkel\/verdi-datalagre. Aksessmetoder. Sortering av store datamengder. Utf\u00f8ringsstrategier for relasjonsalgebra. Eksempler p\u00e5 store, distribuerte datalagre\/databaser fra kjente tjenesteleverand\u00f8rer.","learning_goal":"Kunnskaper:\r\n- Kunnskap om distribuerte og store datamengder\r\n- Innsikt i metoder for organisering og s\u00f8king i store datamengder for hurtig framhenting av informasjon\r\n- Innsikt i metoder for h\u00e5ndtering\/lagring av multidimensjonale data\r\n- Innsikt i metoder for sortering av store datamengder\r\n- Innsikt i utf\u00f8ringstrategier av relasjonsalgebra\r\n- Innsikt i forskjellige eksisternde l\u00f8sninger brukt til distribuert lagring\r\n\r\nFerdigheter:\r\n- Evaluere eksisterende systemer og l\u00f8sninger for lagring og forvaltning av data\r\n- V\u00e6re med p\u00e5 utvikling av nye systemer for lagring og forvaltning av data\r\n\r\nGenerell kompetanse:\r\n- Distribuert systemer\r\n"}
	{"norwegian_name": "Grafikk og visualisering","code":"TDT4230","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Geometriske modeller og forenklinger av dem. Modellering med parametriske kurver og flater. Modellering med flateoppdeling. Hierarkisk modellering av scener. Elliminering av ikke synlige objekter og flater del II. Belysningsmodeller og algoritmer del II. Bruk av teksturer. Str\u00e5lesporing. Animasjonsteknikker. Generering av skygger. Prinsipper for visualisering. Algoritmer for visualisering.","learning_goal":"Kunnskaper: Kandidaten vil tilegne seg avanserte kunnskaper om prinsipper og algoritmer i grafikk og visualsiering.\r\n\r\nFerdigheter: Kandidaten vil heve sine ferdigheter i programmering innen grafikk og visualisering gjennom arbeid med praktiske oppgaver.\r\n\r\nGenerell kompetanse: Kandidaten skal oppn\u00e5 en dypere forst\u00e5else av avanserte prinsipper og algoritmer i datagrafikk og visualisering. Kandidaten skal forst\u00e5 potensialet i bruken av datagrafikk og visualisering. Kandidaten skal besitte grunnlaget for ut \u00e5 utf\u00f8re forskningsoppgaver eller for \u00e5 involvere seg i kommersielle anvendelser p\u00e5 feltet."}
	{"norwegian_name": "Programvaresikkerhet","code":"TDT4237","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Kurset fokuserer p\u00e5 sikkerhet i programvare  tar for seg sikkerhet i alle deler av utviklingsprosessen for programvare: kravinnhenting, design, implementasjon og testing. Vi vil i kurset ta for oss hvilke trusler og angrep programvare er utsatt for og hvordan man kan ta i bruk teknikker og forsvarsmekanismer for \u00e5 utvikle programvare som i st\u00f8rst mulig grad er motstandsdyktig mot eksisterende, og nye, angrep. Kurset har et hovedfokus p\u00e5 web-baserte systemer. ","learning_goal":"Studentene skal i kurset l\u00e6re om sikkerhet (security) i programvare og hvordan man lager sikrere programvaresystemer."}
	{"norwegian_name": "Programvarearkitektur","code":"TDT4240","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"I emnet l\u00e6rer studentene \u00e5 definere og forklare sentrale konsepter innen programvarearkitektur, og \u00e5 kunne bruke og beskrive design- og arkitekturm\u00f8nster, metoder for \u00e5 designe programvarearkitekturer, metoder og teknikker for \u00e5 oppn\u00e5 ulike programvarekvaliteter, metoder for \u00e5 dokumentere programvarearkitekturer, og metoder for \u00e5 evaluere programvarearkitekturer.\r\nEmnet gir kunnskap om ulike design- og arkitekturm\u00f8nster for ulike domener, og om programvarearkitektur og dataspill.\r\nEmnet gir ogs\u00e5 praktisk innf\u00f8ring i bruk av metoder og teknikker relatert til programvarearkitektur gjennom et prosjekt som f\u00f8lger en hel utviklingsprosess, samt implementering av en programvarearkitektur.\r\n","learning_goal":"Kunnskaper:\r\n- Sentrale begreper relatert til programvarearkitektur\r\n- Kvalitetskrav og kvalitetsattributter\r\n- Metoder for evaluering av programvarearkitekturer (ATAM og CBAM)\r\n- Utviklingsprosesser som inkluderer arkitekturdesign\r\n- Ulike arkitekturm\u00f8nster og designm\u00f8nster\r\n- Metoder for \u00e5 designe programvarearkitekturer\r\n- Metoder for \u00e5 spesifisere kvalitetskrav til et system\r\n- Sammenheng mellom krav, arkitektur, prosess og kvalitet\r\n- Metode for \u00e5 generere en arkitektur fra et eksisterende system\r\n- Games and software architectures.\r\n\r\nFerdigheter:\r\n- Bruke design- og arkitekturm\u00f8nster\r\n- Dokumentere kvalitetskrav\r\n- Dokumentere programvarearkitekturer\r\n- Evaluere programvarearkitekturer\r\n- Designe programvarearkitekturer\r\n- Implementere programvarearkitekturer\r\n\r\nGenerell kompetanse:\r\n- Forbedret ferdigheter innen generell systemutvikling\r\n"}
	{"norwegian_name": "Avansert programvareutvikling","code":"TDT4242","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Kravspesifikasjon, med fokus p\u00e5 overgang fra brukerkrav til teknisk kravspesifikasjon og tilh\u00f8rende vurderinger av realiserbarhet og testbarhet. Estimering. Testing, testplanlegging og test-drevet utvikling, ulike testtyper og testteknikker, andre valideringsteknikker, kvalitetssikring og prosessforbedring. Smidige metoder. Utviklingsmetodikk spesifikt for komponentbasert og tjenesteorientert utvikling, outsourcing og offshoring, \u00e5pen kildekode og programvare-\u00f8kosystemer. Metodikk for forvaltning og vedlikehold av store programsystemer, h\u00e5ndtering av legacy-kode. ","learning_goal":"Kunnskaper: Innsikt i moderne prosesser og metoder for utvikling og kvalitetssikring av programvaresystemer, kjenne styrker og svakheter ved ulike teknikker og hvilke som passer \u00e5 bruke i hvilke situasjoner. Dyp forst\u00e5else for koblingen mellom kravspesifikasjon, design og testing.\r\n\r\nFerdigheter: Kunne gj\u00f8re gode og velbegrunnede valg av prosesser og teknikker basert p\u00e5 prosjektkontekst. Kunne mestre overgangen mellom ulike deloppgaver og samhandling mellom ulike akt\u00f8rer i programvareutvikling.\r\n\r\nGenerell kompetanse: Evne til \u00e5 forst\u00e5 forskningsresultater innen programvareutvikling og kunne nyttiggj\u00f8re seg disse i videreutvikling av egen praksis.\r\n"}
	{"norwegian_name": "Samhandlingsteknologi og sosiale medier","code":"TDT4245","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Sosiale medier, datast\u00f8ttet samarbeid, koordinering, delte arbeidsrom, delte informasjonsrom, samarbeidsst\u00f8tte for nomadisk brukere, samarbeidsst\u00f8tte i systemutvikling, design og evaluering av samhandlingsteknologi.","learning_goal":"Emnet skal gi studentene innsikt i datast\u00f8ttet samarbeid og sosiale medier slik at de er i stand til b\u00e5de \u00e5 vurdere mulige anvendelser og selv kunne anvende teknologien i systembygging og kunnskapsforvaltning."}
	{"norwegian_name": "Avansert programvaredesign","code":"TDT4250","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Generelle teknikker for modellering, design og realisering av modul\u00e6r programvare, med fokus p\u00e5 industrielle teknikker og anvendelser. Komponentbasert design, komponentbaserte arkitekturer og rammeverk, distribuerte komponentbaserte systemer. Modell-drevet utvikling av programvare, kode-generering og domenespesifikk spr\u00e5k.\r\nTesting, kontinuerlig integrasjon og forvaltning.","learning_goal":"Kunnskaper:\r\nStudenten skal kunne generelle metoder for modellering, design og realisering av modul\u00e6r programvare og modell-drevet utvikling av programvare, og hvordan disse brukes i ulike faser av utvikling og vedlikehold.\r\n\r\nFerdigheter:\r\nStudenten skal ha praktiske ferdigheter i modellering, design og realisering modul\u00e6r programvare, med moderne rammeverk og verkt\u00f8y, ogs\u00e5 med modell-baserte teknikker.\r\n\r\nGenerell kompetanse:\r\nStudenten skal kjenne til og kunne velge mellom ulike metoder og teknikker for utvikling av modul\u00e6r programvare."}
	{"norwegian_name": "Virksomhets-arkitektur og -innovasjon","code":"TDT4252","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"Emnet fokuserer p\u00e5 rollen som informasjonssystemer har i en organisatorisk sammenheng, b\u00e5de internt i organisasjoner, og der organisasjonene er involvert i digitale \u00f8kosystem og andre sammarbeidskonstellasjoner. Det vil ta for seg \u00e5rsakene til at informasjonssystemer er utformet som de er ved \u00e5 utforske behovene til organisasjoner og brukere, prosesser og dessuten hvilke roller systemene st\u00f8tter i en organisatorisk og arbeidssammenheng. Det vil bli lagt vekt p\u00e5 hvordan IT kan bidra til innovasjon og verdi gjennom tjenesteutvikling og digital virksomhetsutvikling. Emnet inneholder metoder for virksomhetsmodellering, tjenestemodellering og forretningsmodellering  som vil v\u00e6re komplement\u00e6re til modellering av datasystemer. Metoder knyttet til modellering og kvalitetssikring av modeller samt virksomhetsarkitektur vil bli presentert.","learning_goal":"Kunnskap: Kandidaten skal etablere teoretisk innsikt i forretnings-modellering, tjenesteinnovasjon, virksomhetsmodellering og metodene for \u00e5 analysere og modellere organisatoriske situasjoner. \r\n\r\nFerdigheter: Kandidaten skal etablere praktiske ferdigheter i \u00e5 skape gode forretnings og virksomhetsmodeller som kan \u00f8ke forst\u00e5elsen av design av IT systemer og utvide de perspektivene som datasystem-modeller gir. \r\n\r\nKompetanse: Kandidaten skal kunne sette emnet inn i en bredere teknologisk, forretningsmessig og sosial kontekst i forhold til den virkningen informasjonssystemer har i samfunnet.\r\n"}
	{"norwegian_name": "Datamaskinkonstruksjon","code":"TDT4255","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Avanserte emner innen konstruksjon av maskinvare. Konstruksjonsutfordringer som styrende og utf\u00f8rende enhet,  samleb\u00e5nd og implementasjonsutfordringer som assemblyprogrammering, h\u00f8yniv\u00e5-programmering,  maskinvarebeskrivende spr\u00e5k, spesifikasjon, partisjonering, testing og verifisering.\r\nInnebygde systemer, Field-Programmable Gate Arrays (FPGAs) og instruksjonssett for mikroprosessorer.","learning_goal":"Kunnskaper:\r\n- Studenten skal ha grundig forst\u00e5else av enkle prosessorers konstruksjon og virkem\u00e5te.\r\n- Studenten skal forst\u00e5 hvordan en prosessor bygges ved hjelp av byggeblokker p\u00e5 forskjellige abstraksjonsniv\u00e5er som registre, registerfiler, multipleksere, porter, ALUer, etc.\r\n- Studenten skal kjenne til avanserte teknikker for ytelses\u00f8kning i en skalar prosessorkjerne.\r\n- Studenten skal forst\u00e5 sentrale avveininger innen utvikling av instruksjonssett.\r\n- Studenten skal ha en grundig forst\u00e5else av hurtigbufferes (eng: cache) konstruksjon og virkem\u00e5te.\r\n\r\nFerdigheter:\r\n- Studenten skal kunne konstruere enkle prosessorer ved hjelp av et maskinvarebeskrivende spr\u00e5k.\r\n- Studenten skal kunne analysere problemstillinger knyttet til oppbygning av instruksjonssett.\r\n\r\nGenerell kompetanse:\r\n- Studenten skal beherske enkel datamaskinkonstruksjon og kunne anvende denne kunnskapen i prosjekter p\u00e5 alle abstraksjonsniv\u00e5."}
	{"norwegian_name": "Digital tjenesteinnovasjon","code":"TDT4257","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Private s\u00e5 vel som offentlige virksomheter leverer i \u00f8kende grad tjenester heller enn \u00e5 produsere varer. Eksempelvis handler avis mindre om \u00e5 produsere et papirprodukt og mer om presentasjon for browser\/ mobil, m\u00e5lrette reklame, etablere nye tilleggstjenester for abonnentene, \u00e5pne for anbefalings tjenester basert p\u00e5 brukeroppf\u00f8rsel eller \u0096preferanser.\r\n\r\nIKT kjennetegnes av egenskaper som programmerbarhet, utvidbarhet og lagvis komponerbarhet som inviterer til utvikling av nye tjenester. IKT skaper dermed unike muligheter for tjenesteinnovasjon.\r\n\r\nKurset fokuserer p\u00e5 tre aspekter ved digital tjenesteinnovasjon:\r\n\r\nTjeneste\u00f8kosystem (rollefordeling, forretningsmodell, institusjonell ramme)\r\nTjenesteplattform (teknisk plattform, arkitektur, lagdelt modell)\r\nSamskapt verdi (verdi for hvem? opplevd verdi? Sitasjonsavhengig verdi?)\r\n\r\nKurset tar for seg relevante teoretiske begrep og modeller. Kurset diskuterer utvalgte case\/ eksempler\r\n","learning_goal":"Kunnskap: Kandidaten skal etablere dyp kunnskap om begrep for, modeller av og erfaringer med digital tjenesteinnovasjon\r\n\r\nFerdigheter: Kandidaten skal utvikle god evne til \u00e5 identifisere, utvikle og evaluere nye tjenesteplattformer i virkelighetsn\u00e6re situasjoner. \r\n\r\nKompetanse: Kandidaten skal etablere tverrfaglig kompetanse for \u00e5 forst\u00e5 forretningsmessige, strategiske, teknologiske og sosiale betingelser for \u00e5 realisere digital tjenesteinnovasjon i praksis. "}
	{"norwegian_name": "Maskinn\u00e6r programmering","code":"TDT4258","credits":7.5,"taught_in_spring":true,"taught_in_autumn":true,"content":"(a) Introduksjon: Mikrokontrollere, programvare, programmerbar logikk, perifere enheter. \r\n(b) Maskinvare: Mikrokontrollere og system der mikrokontroller er en sentral komponent eller en alternativ dell\u00f8sning i systemet. Aktuelle komponenter og system:  AVR-mikrokontroller, PowerPC-prosessor integrert i FPGA, utviklingskort med mikrokontroller\/FPGA,  brikker med mikrokontroller. \r\n(c) Maskinn\u00e6r programmering: Programmering i system med begrensete ressurser. Kompilatorer, C og assembler. HW\/SW-interaksjoner. Hardkode\/operativsystem for mikrokontrollersystem. \r\n(d) Grensesnitt og periferienheter: Metoder for \u00e5 bruke eksterne enheter og eventuelle spesielle maskinvareressurser, samt system der prosessorer brukes som en tilleggsressurs.\r\n","learning_goal":"Kunnskaper:\r\n- Studenten skal vite hvordan utvikling for innebygde systemer (Eng. embedded systems) skiller seg fra utvikling for tradisjonelle datamaskiner\r\n- Studenten skal kjenne til forskjellige mikrokontrollere og deres vanlige periferienheter\r\n- Studenten skal kjenne til vanlige teknikker og l\u00f8sninger innen maskinvaren\u00e6r programmering og deres fordeler og ulemper\r\n- Student skal vite hvordan vanlige energisparingsteknikker fungerer og deres fordeler og ulemper\r\n\r\nFerdigheter:\r\n- Studenten skal beherske maskinvaren\u00e6r programmering av mikrokontrollere p\u00e5 ulike abstraksjonsniv\u00e5 (assembly vs. h\u00f8yniv\u00e5spr\u00e5k  med og uten operativsystem)\r\n- Studenten skal kunne bruke utvalgte energisparingsteknikker \r\n\r\nGenerell kompetanse:\r\n- Studenten skal beherske maskinvaren\u00e6r programmering og kunne anvende denne kunnskapen i prosjekter p\u00e5 alle abstraksjonsniv\u00e5"}
	{"norwegian_name": "Datamaskinarkitektur","code":"TDT4260","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Fundamentale begrep innen datamaskinarkitektur, trender, m\u00e5ling av ytelse, kvantitative prinsipper. Instruksjonssett-arkitektur og kompilatorens rolle. Parallellitet p\u00e5 instruksjonsniv\u00e5, hopp-prediksjon, tr\u00e5d-niv\u00e5 parallellitet, VLIW og eksempler. Konstruksjon av minne-hierarki, hurtigbuffer, lagringssystemer. Multiprosessorer, tr\u00e5dniv\u00e5 parallellitet, delt minne arkitekturer, distribuert delt lager, synkronisering, og multithreading. Sammenkoplingsnettverk, topologier, klynger, og eksempel.","learning_goal":"Kunnskaper:\r\n- Studenten skal ha en grundig forst\u00e5else av hvordan h\u00f8yniv\u00e5 byggeblokker som prosessorer av ulik art, hurtigbuffere, sammenkoblingsnettverk (Eng. interconnect), busser, etc. b\u00f8r settes sammen til et komplett datamaskinssystem.\r\n- Studenten skal ha en grundig forst\u00e5else av moderne minnesystemers konstruksjon og virkem\u00e5te.\r\n- Studenten skal ha kjennskap til maskinvaresikkerhetstiltak som virtuelt minne og p\u00e5litelige maskinvaresoner.\r\n- Studenten skal ha en grundig forst\u00e5else av hvordan flere prosessorkjerner kan settes sammen til parallelle datamaskinarkitekturer, deriblant homogene og heterogene flerkjerneprosessorer og multiprosessorer.\r\n- Studenten skal ha kjennskap til hvorledes samspillet mellom arkitektur, systemprogramvare og applikasjon p\u00e5virker ytelsen i parallelle datamaskinsystemer.\r\n\r\nFerdigheter:\r\n- Studenten skal kunne evaluere arkitekturvalg ved hjelp av simulatorer og trekke fornuftige konklusjoner basert p\u00e5 disse studiene.\r\n\r\nGenerell kompetanse:\r\n- Studenten skal kunne bruke sin kunnskap om datamaskinarkitektur i utviklingsprosjekter p\u00e5 alle abstraksjonsniv\u00e5."}
	{"norwegian_name": "Prototyping av interaktive media","code":"TDT4262","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Grunnleggende begreper om software og hardware; new media art; multimediainnhold som bilder, video og lyd; \u00e5pen kildekode og \u00e5pent innhold. Sykluser av prototyping og evaluering.\r\nMetoder for \u00e5 sette sammen hardwarekomponenter som prosessorer, sensorer og aktuatorer, \u00e5 programmere interaktive atferd, og organisere multimediainnhold som bilder, video og lyd. Grunnleggende evalueringsprosedyrer basert p\u00e5 b\u00e5de estetisk og teknisk kvalitet. Interaktive brukeropplevelser, som immersive spaces, videospill, interaktive kampanjer. ","learning_goal":"Studentene skal l\u00e6re \u00e5: \r\n\r\n- lage neste generasjons interaktive brukeropplevelser\r\n- forst\u00e5 Internet of Things(IoT)\r\n- sette sammen hardwarekomponenter som prosessorer, sensorer og aktuatorer\r\n- gj\u00f8re produkter interaktive og koblet til internett ved \u00e5 programmere dem\r\n- organisere multimediainnhold som bilder, video og lyd\r\n- bruke \u00e5pen kildekode og \u00e5pent innhold\r\n- samarbeide om \u00e5 lage god kode\r\n- lage stadig bedre interaktive produkter med en iterativ designprosess med prototyping og brukertesting\r\n"}
	{"norwegian_name": "Datasyn og dyp l\u00e6ring","code":"TDT4265","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Datasyn danner grunnlaget for en automatisk forst\u00e5else av digitale bilder som i dag kan tas opp med mange forskjellige kameraenheter (f.eks. mobiltelefoner, webkameraer, dybde-bilder, MR, Ultralyd...).\r\nInnholdet i kurset varierer fra den klassiske tiln\u00e6rmelsen til datasyn hvor egenskaper blir trukket ut og klassifisert til mer moderne metoder for bilde forst\u00e5else basert p\u00e5 maskin l\u00e6ring og dype nett. Kurset inneholder ogs\u00e5 en kort gjennomgang av n\u00f8dvendig programmerings kunnskap og matematikk, i tillegg til basis metoder innenfor bildebehandling\/analyse, dette for at alle skal ha den n\u00f8dvendige ballast for \u00e5 g\u00e5 videre med de mer avanserte delene av kurset. \r\nTemaer som blir adressert i kurset er det menneskelige \u00f8ye og bildedannelse, filtrering i b\u00e5de romlig og frekvens domenet, hierarkiske strukturer og scale space, principal components analysis (PCA), egenskapsuttrekking (f.eks. Harris, SIFT) og matching (f.eks. RANSAC), unsupervised and supervised klassifisering & gjenkjenning s\u00e5 vel som ulike maskinl\u00e6ringsmetoder, stereosyn, den essensielle og den fundamentale matrisen, optisk flow og tracking, og sist men ikke minst dype nett for datasyn.\r\nEksempler vil bli hentet fra ulike applikasjonsdomener som medisin, autonomi (droner, biler, skip) & robotikk, industriell inspeksjon osv. ","learning_goal":"Kurset gir en oversikt og forst\u00e5else av flere grunnleggende teknikker i Datasyn (Computer Vision). Avansert kunnskap p\u00e5 dette feltet blir stadig viktigere. Dette er spesielt sant i lys av den stadig \u00f8kende tall av kameraer og annet bildebehandlingsenheter i nesten alle omr\u00e5der av v\u00e5rt samfunn. Kurset bidrar til \u00e5 bygge kompetanse for \u00e5 designe og konstruere datasynsmoduler som fungerer i et totalsystem for \u00e5 l\u00f8se relevante problemer.  Bruksomr\u00e5der inkluderer industri anvendelser, autonomi (droner, biler og skip), robotikk og medisinsk bildeanalyse. Disse emnene kan v\u00e6re basis for ansettelse i industri eller offentlig sektor, eller de kan f\u00f8lges videre i forskning p\u00e5 doktorgradsniv\u00e5 i Norge eller utenlands."}
	{"norwegian_name": "Algoritmer for bioinformatikk","code":"TDT4287","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Emnet tar for seg algoritmiske metoder med anvendelser innen bioinformatikk, med et spesielt fokus p\u00e5 algoritmer og datastrukturer for s\u00f8k, sammenligning og m\u00f8nsteroppdaging i strenger. Emnet bruker eksempler p\u00e5 biologiske problemstillinger for \u00e5 motivere algoritmer og l\u00f8sninger, men emnets fokus er p\u00e5 de algoritmiske problemstillingene.","learning_goal":"Kunnskap:\r\n- Vet hvordan strengsammenligningsproblem som \"longest common subsequence\", \"edit distance\", \"local alignment\" og \"global alignment\" kan l\u00f8ses ved dynamisk programmering (DP).\r\n- Vet hvordan DP-l\u00f8sningen for sammenligning av to strenger kan utvides til sammenligning av flere strenger (\"multiple alignment\").\r\n- Vet hvordan k-mer indekser kan brukes for eksakt og approksimativt strengs\u00f8k.\r\n- Vet hva et n\u00f8kkelordtre er, og hvordan denne indeksstrukturen bygges og brukes for strengs\u00f8k.\r\n- Vet hva et suffikstre er, hvordan denne indeksstrukturen kan bygges p\u00e5 line\u00e6r tid ved hjelp av Ukkonens algoritme, og hvordan suffikstre kan brukes for \u00e5 l\u00f8se ulike strengs\u00f8k og -sammenligningsproblem. \r\n- Vet hvordan m\u00f8nster i strenger kan finnes med eksakte metoder (ved branch-and-bound) og heuristiske metoder (ved simulated annealing). \r\n- Vet sammenhengen mellom sekvenssammenstilling (assembly) og korteste superstreng-problemet og hvorfor Euler-sykel-problemet er et spesialtilfelle av sekvenssammenstilling.\r\n- Vet hva hidden Markov-modeller (HMM) er, hvordan disse kan brukes til \u00e5 modellere og identifisere egenskaper med strenger, og hvordan de sentrale HMM-algoritmene \"Viterbi\", \"forward\", og \"backward\" fungerer.\r\n- Vet hva en RNA sekund\u00e6rstruktur er, hvordan denne relateres til palindrom, og hvordan DP kan brukes til \u00e5 finne optimale og suboptimale RNA sekund\u00e6rstrukturer.\r\n\r\nFerdigheter:\r\n- Implementere kjente algoritmer og datastrukturer og bruke disse p\u00e5 reelle data.\r\n- Gjenkjenne varianter av kjente problemstillinger og tilpasse kjente algoritmer til \u00e5 l\u00f8se disse.\r\n\r\nGenerell kompetanse:\r\n- Vurdere alternativer og velge l\u00f8sninger som er hensiktsmessige til \u00e5 l\u00f8se problemstillinger med reelle data. \r\n- Presentere egne l\u00f8sninger og resultat muntlig og skriftlig."}
	{"norwegian_name": "Kundestyrt prosjekt","code":"TDT4290","credits":15.0,"taught_in_spring":false,"taught_in_autumn":true,"content":"Hver gruppe f\u00e5r en oppgave fra en kunde\/oppdragsgiver som skal gjennomf\u00f8res som et prosjekt. Alle faser ved gjennomf\u00f8ring av et IS\/IT prosjekt skal dekkes: forstudie, kravspesifikasjon, konstruksjon, programmering og evaluering, men vekten skal legges p\u00e5 de tidlige fasene. Det er viktig at gruppene har god dialog med kunden. Det skal lages en prosjektrapport og holdes en avsluttende presentasjon og demonstrasjon av et kj\u00f8rbart program med kunde og sensor til stede. Det er obligatorisk oppm\u00f8te til emnets oppstartsm\u00f8te som holdes tirsdag i semesterets 2. uke, til gjesteforelesninger og kurset i gruppedynamikk, og til den ukentlige veiledningen. Manglende oppm\u00f8te kan medf\u00f8re at studentene ikke f\u00e5r anledning til \u00e5 ta emnet.","learning_goal":"Kunnskaper: \u00c5 gi studentene praktisk erfaring i \u00e5 gjennomf\u00f8re alle faser av et st\u00f8rre IS\/IT-prosjekt.\r\n\r\nFerdigheter:  Evne til \u00e5 organisere og gjennomf\u00f8re st\u00f8rre IS\/IT-prosjekter, samt til \u00e5 dokumentere og presentere resultatene til en reell kunde.\r\n\r\nGenerell kompetanse: Innsikt i prosjektarbeid og hvordan grupper kan brukes til \u00e5 l\u00f8se komplekse, datatekniske problemer."}
	{"norwegian_name": "Datamaskinprosjekt","code":"TDT4295","credits":15.0,"taught_in_spring":false,"taught_in_autumn":true,"content":"Innf\u00f8ring i moderne metoder, teknikker og verkt\u00f8y for utvikling av datamaskinsystemer. Innledningsvis gis det forelesninger og orienteringer om de verkt\u00f8y og hjelpemidler som er tilgjengelige i datamaskinlaboratoriet for spesifikasjon, konstruksjon, verifikasjon og utpr\u00f8ving av kretser, kretskort og systemer. Gjennomf\u00f8ring av et realistisk utviklingsprosjekt som gruppearbeid. Arbeidet inneb\u00e6rer spesifikasjon, kretskortutlegg, mikrokontrollerprogrammering, FPGA-utvikling, testing, verifikasjon og dokumentasjon.","learning_goal":"Kunnskaper:\r\n- Studenten l\u00e6rer designprosessen for et innebygd system. Dette inkluderer utvikling av maskinvaren\u00e6r programvare, maskinvare og kretskort samt n\u00f8dvendig dokumentasjon og prosjektstyring.\r\n\r\nFerdigheter:\r\n- Studenten l\u00e6rer \u00e5 jobbe i gruppe med en vagt definert problemstilling\r\n- Studenten l\u00e6rer utvikling, feils\u00f8king og feilretting rettet mot rekonfigurerbar logikk, mikrokontrollere og kretskort \r\n- Studenten l\u00e6rer feils\u00f8king og feilretting p\u00e5 systemniv\u00e5 (integrasjon).\r\n\r\nGenerell kompetanse:\r\n- Studenten l\u00e6rer \u00e5 jobbe i prosjekt. Dette inneb\u00e6rer \u00e5 ta valg basert p\u00e5 begrenset informasjon, \u00e5 leve med disse der de viste seg \u00e5 v\u00e6re suboptimale og \u00e5 evaluere valgene n\u00e5r bedre informasjon blir tilgjengelig.\r\n"}
	{"norwegian_name": "Datavarehus og datagruvedrift","code":"TDT4300","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Emnet omhandler metoder og teori for \u00e5 utvikle datavarehus og utf\u00f8re dataanalyse vha. datagruvedrift. Datakvalitet og teknikker for preprosessering av data. Modellering og design av datavarehus. Algoritmer for klassifisering, klynging, og assosiasjonsregeldeteksjon. Praktisk bruk av programvare for dataanalyse.","learning_goal":"Kunnskaper: \r\nKandidaten skal ha kunnskap om: \r\n- Preprosessering av data og datakvalitet.\r\n- Modellering og design av datavarehus.\r\n- Generelle algoritmer for datagruvedrift.\r\n\r\nFerdigheter: \r\n- V\u00e6re i stand til \u00e5 designe datavarehus.\r\n- Evne til \u00e5 kunne anvende tilegnet kunnskap til \u00e5 vurdere data og velge hensiktsmessige metoder for dataanalyse. \r\n"}
	{"norwegian_name": "Big Data-arkitektur","code":"TDT4305","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Emnet tar for seg hovedaspekt ved Big Data. Sentrale tema er rammeverk for Big Data-prosessering (MapReduce, Spark, Storm, etc.), datagruvedrift av Big Data, datastr\u00f8mmer og analyse av tidsserier, anbefalingssystemer, og analyse av sosiale nettverk. ","learning_goal":"Kunnskaper: \r\nKandidaten skal ha kunnskap om: \r\n- Big Data rammeverk. \r\n- Dataguvedrift av Big Data. \r\n- Prosessering av datastr\u00f8mmer. \r\n- Analyse av tidsserier.\r\n- Anbefalingssystemer. \r\n- Analyse av sosiale nettverk. \r\n\r\nFerdigheter: \r\n- Forst\u00e5 problemstillinger rundt Big Data. \r\n- Evne til \u00e5 anvende tilegnet kunnskap til \u00e5 vurdere data og velge hensiktsmessige metoder for \u00e5 prosessere og analysere Big Data."}
	{"norwegian_name": "Intelligent tekstanalyse og spr\u00e5kforst\u00e5else","code":"TDT4310","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"Emnet omfatter: menneskelige spr\u00e5k og spr\u00e5kbehandling, maskinl\u00e6ring og statistiske metoder for spr\u00e5kf\u00f8rst\u00e5else og tekstanalyse, sentimentanalyse og meninggruvedrift, informasjonaksess og tekstgruvedrift, konverserende agenter, maskinoversettelse, semantikk for naturlige spr\u00e5k, datamaskinell lingvistisk kreativitet.","learning_goal":"Studentene skal ha en grunnleggende og praktisk forst\u00e5else av aktuelle rammeverk og metoder for tekstanalyse og naturlig spr\u00e5k-forst\u00e5else."}
	{"norwegian_name": "Datateknologi, fordypningsprosjekt","code":"TDT4501","credits":15.0,"taught_in_spring":false,"taught_in_autumn":true,"content":"Prosjektarbeid som omhandler aktuelle problemstillinger i datateknologi.\r\n\r\nOversikt over prosjektoppgaveforslag: http:\/\/www.idi.ntnu.no\/education\/fordypningsprosjekt.php \r\n\r\nFor valg av fordypningsprosjekt og informasjon om praktisk gjennomf\u00f8ring se siden \u00abfordypning i datateknologi\u00bb p\u00e5 Innsida: https:\/\/innsida.ntnu.no\/wiki\/-\/wiki\/Norsk\/Fordypning+i+datateknologi\r\n\r\n","learning_goal":"Kunnskap: Innsikt i hvordan forskningsresultater genereres og rapporteres innen valgt spesialomr\u00e5de, forst\u00e5else for avansert teori og praksis innen prosjektrapportens tema. Kjenne til viktige prinsipper for forskningsetikk \/ akademisk \u00e6rlighet. \r\n\r\nFerdigheter: Evne til \u00e5 fordype seg i et spesifikt tema innen valgt fagomr\u00e5de ut fra vitenskapelige arbeidsmetoder, bl.a. innhente kompletterende kunnskap gjennom litteraturstudier og annet kildes\u00f8k og kombinere dette med egen kunnskap og resultater fra egne unders\u00f8kelser. \r\n\r\nGenerell kompetanse: Kunne gjennomf\u00f8re et st\u00f8rre selvstendig prosjektarbeid, inklusive \u00e5 utarbeide en prosjektplan med milep\u00e6ler, rapportere delresultat og skrive en prosjektrapport i hht. gitte retningslinjer."}
	{"norwegian_name": "Datateknologi, fordypningsemne","code":"TDT4506","credits":7.5,"taught_in_spring":false,"taught_in_autumn":true,"content":"Studenten skal velge to tema \u00e0 3,75 studiepoeng. \r\nListe over aktuelle tema: http:\/\/www.idi.ntnu.no\/education\/emner.php?&p=alle&v=tema\r\nAndre tema\/emner kan velges etter avtale med instituttet.\r\nRegistrering av fordypning for datateknologi (MTDT\/MIDT) og information systems (MSINFOSYST): https:\/\/innsida.ntnu.no\/wiki\/-\/wiki\/Norsk\/Fordypning+i+datateknologi\r\nRegistering av tema for andre studieprogram og utvekslingsstudenter: www.idi.ntnu.no\/education\/mine_teorimoduler.php","learning_goal":"Kunnskap: Dyp innsikt i et teoretisk emne, fortrinnsvis med sterk relevans til det fordypningsprosjektet som studenten har valgt. \r\n\r\nFerdigheter: Evne til \u00e5 fordype seg i avansert vitenskapelig litteratur og anvende denne i prosjektforskning og rapportskriving. \r\n\r\nGenerell kompetanse: Evne til \u00e5 gj\u00f8re rede for og diskutere teoretisk kunnskap i relasjon til forskningsprosjekt og i en bredere samfunnskontekst. "}
	{"norwegian_name": "Eksperter i team - ICT-Enabled Social Innovation for Social Good","code":"TDT4850","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"For mer informasjon om Eksperter i Team, se www.ntnu.no\/eit","learning_goal":""}
	{"norwegian_name": "Eksperter i team - Storskala CO2-lagring","code":"TDT4855","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"For mer informasjon om Eksperter i Team, se www.ntnu.no\/eit","learning_goal":""}
	{"norwegian_name": "Eksperter i team - IT-styring av moderne lastebiler","code":"TDT4856","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"For mer informasjons om Eksperter i Team, se www.ntnu.no\/eit","learning_goal":""}
	{"norwegian_name": "Eksperter i team - Big Data Analytics and Business Intelligence","code":"TDT4857","credits":7.5,"taught_in_spring":true,"taught_in_autumn":false,"content":"For mer informasjons om Eksperter i Team, se www.ntnu.no\/eit","learning_goal":""}
	{"norwegian_name": "Datateknologi, masteroppgave","code":"TDT4900","credits":30.0,"taught_in_spring":true,"taught_in_autumn":false,"content":"","learning_goal":"Kunnskap: Innsikt i hvordan forskningsresultater genereres og rapporteres innen valgt spesialomr\u00e5de, forst\u00e5else for avansert teori og praksis innen masteroppgavens tema. Kjenne til viktige prinsipper for forskningsetikk \/ akademisk \u00e6rlighet. \r\n\r\nFerdigheter: Evne til \u00e5 fordype seg i et spesifikt tema innen valgt fagomr\u00e5de ut fra vitenskapelige arbeidsmetoder, bl.a. innhente kompletterende kunnskap gjennom litteraturstudier og annet kildes\u00f8k og kombinere dette med egen kunnskap og resultater fra egne unders\u00f8kelser. \r\n\r\nGenerell kompetanse: Kunne gjennomf\u00f8re et st\u00f8rre selvstendig prosjektarbeid, inklusive \u00e5 utarbeide en prosjektplan med milep\u00e6ler, rapportere delresultat og skrive en masteroppgave i hht. gitte retningslinjer."}